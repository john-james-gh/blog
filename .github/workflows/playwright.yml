name: Playwright

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

env:
  NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ vars.NEXT_PUBLIC_SANITY_PROJECT_ID }}
  NEXT_PUBLIC_SANITY_DATASET: ${{ vars.NEXT_PUBLIC_SANITY_DATASET }}
  SANITY_API_READ_TOKEN: ${{ secrets.SANITY_API_READ_TOKEN }}

jobs:
  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      # Cache the pnpm store (dependency tarballs) so installs are faster, but this does not touch the Next.js build output.
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: pnpm

      - name: Enable Corepack
        run: corepack enable pnpm

      - name: Install dependencies
        run: pnpm install

      # Prime the Next.js incremental build cache using the pattern from the official Next.js docs.
      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: nextjs-cache-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: nextjs-cache-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps

      - name: Run Playwright tests
        run: pnpm e2e

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: !cancelled()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
