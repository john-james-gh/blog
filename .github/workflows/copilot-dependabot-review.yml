name: Dependabot â†’ Facts + Copilot

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  facts:
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - id: meta
        uses: dependabot/fetch-metadata@v2

      - uses: actions/checkout@v4

      - name: Import counts
        id: usage
        env:
          PKGS: ${{ steps.meta.outputs.dependency-names }}
        run: |
          set -euo pipefail

          GLOBS=( '*.ts' '*.tsx' '*.js' '*.jsx' '*.mjs' '*.cjs' )
          EXCLUDES=( ':(exclude)node_modules/*' ':(exclude).next/*' ':(exclude)dist/*' ':(exclude)build/*' ':(exclude)coverage/*' ':(exclude).turbo/*' )

          escape() { printf '%s' "$1" | sed -E 's/[][(){}.^$|*+?\\]/\\&/g'; }

          out=""
          IFS=',' read -ra arr <<< "${PKGS}"
          for raw in "${arr[@]}"; do
            pkg="$(echo "$raw" | xargs)"
            [ -z "$pkg" ] && continue

            # Escape regex specials, keep '/' so we can match subpaths
            esc="$(escape "$pkg")"

            # Match:
            #  import ... from 'pkg' or 'pkg/...'
            #  import 'pkg' or 'pkg/...'
            #  require('pkg') or require('pkg/...')
            #  import('pkg') or import('pkg/...')
            pat="from[[:space:]]+['\"]${esc}(?:/[^'\"]*)?['\"]|^[[:space:]]*import[[:space:]]+['\"]${esc}(?:/[^'\"]*)?['\"]|require\\([[:space:]]*['\"]${esc}(?:/[^'\"]*)?['\"]\\)|import\\([[:space:]]*['\"]${esc}(?:/[^'\"]*)?['\"]\\)"

            matches=$(git grep -n -I -E "$pat" -- "${GLOBS[@]}" -- . "${EXCLUDES[@]}" || true)
            files=$(printf "%s" "$matches" | cut -d: -f1 | sort -u | wc -l | tr -d ' ')
            hits=$(printf "%s" "$matches" | wc -l | tr -d ' ')
            out+="- \`${pkg}\`: **${files} files**, **${hits} imports**"$'\n'
          done

          echo "lines<<EOF" >> "$GITHUB_OUTPUT"
          printf "%s" "$out" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Post facts + prompt Copilot
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ðŸ§ª **Dependabot facts**
            - Packages: `${{ steps.meta.outputs.dependency-names }}`
            - Update type: `${{ steps.meta.outputs.update-type }}`
            - Dependency type: `${{ steps.meta.outputs.dependency-type }}`
            - Directory: `${{ steps.meta.outputs.directory }}`
            - **Import usage**
            ${{ steps.usage.outputs.lines }}

            **Copilot**: reply in plain GitHub Markdown, no code fences, real line breaks.
            Use `.github/instructions/dependabot-pr-instructions.md` to format the review.
