name: Dependabot â†’ Facts + Copilot

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  facts:
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - id: meta
        uses: dependabot/fetch-metadata@v2

      - uses: actions/checkout@v4

      - name: Import counts (git grep, subpaths)
        id: usage
        env:
          PKGS: ${{ steps.meta.outputs.dependency-names }}
        run: |
          set -euo pipefail

          # Use git pathspecs with glob magic and exclude heavy dirs
          FILES=(
            ':(glob)**/*.ts' ':(glob)**/*.tsx' ':(glob)**/*.js'
            ':(glob)**/*.jsx' ':(glob)**/*.mjs' ':(glob)**/*.cjs'
            ':!node_modules/**' ':!.next/**' ':!dist/**' ':!build/**' ':!coverage/**' ':!.turbo/**'
          )

          esc() { printf '%s' "$1" | sed -E 's/[][(){}.^$|*+?\\]/\\&/g'; }  # keep '/' unescaped

          out=""
          IFS=',' read -ra arr <<< "${PKGS}"
          for raw in "${arr[@]}"; do
            pkg="$(echo "$raw" | xargs)"
            [ -z "$pkg" ] && continue
            e="$(esc "$pkg")"

            # ERE patterns, no (?:..). Allow subpaths like pkg/... or @scope/pkg/...
            p1="from[[:space:]]+['\"]${e}(/[^\"]*)?['\"]"
            p2="^[[:space:]]*import[[:space:]]+['\"]${e}(/[^\"]*)?['\"]"
            p3="require\\([[:space:]]*['\"]${e}(/[^\"]*)?['\"]\\)"
            p4="import\\([[:space:]]*['\"]${e}(/[^\"]*)?['\"]\\)"

            matches="$(git grep -n -I -E "${p1}|${p2}|${p3}|${p4}" -- "${FILES[@]}" || true)"
            files="$(printf "%s" "$matches" | cut -d: -f1 | sort -u | wc -l | tr -d ' ')"
            hits="$(printf "%s" "$matches" | wc -l | tr -d ' ')"

            out+="- \`${pkg}\`: **${files} files**, **${hits} imports**"$'\n'
          done

          echo "lines<<EOF" >> "$GITHUB_OUTPUT"
          printf "%s" "$out" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Post facts + prompt Copilot
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ðŸ§ª **Dependabot facts**
            - Packages: `${{ steps.meta.outputs.dependency-names }}`
            - Update type: `${{ steps.meta.outputs.update-type }}`
            - Dependency type: `${{ steps.meta.outputs.dependency-type }}`
            - Directory: `${{ steps.meta.outputs.directory }}`
            - Import usage
            ${{ steps.usage.outputs.lines }}

            @copilot: Generate a report for this Dependabot PR using the facts above.
            Use `.github/instructions/dependabot-pr-instructions.md`.
